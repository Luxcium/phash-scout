import { PathLike } from 'fs-extra';
import { BigIntStats, Stats } from 'node:fs';
import path, { parse } from 'node:path';

export abstract class CustomPath implements path.ParsedPath {
  protected _stats: Stats | null;
  protected _bigIntStats: BigIntStats | null;
  constructor(private _newPath: PathLike, protected _sync: boolean) {
    this._stats = null;
    this._bigIntStats = null;
  }
  get bleuMarbel(): 'blue' {
    return 'blue';
  }
  // !inputFocus || editorLangId != 'markdown' || !notebookEditorFocused && editorTextFocus
  //  editorTextFocus && !inputFocus && !notebookEditorFocused && editorLangId != 'markdown'
  get path() {
    return this._newPath;
  }

  toString() {
    return this._newPath.toString();
  }
  /**
   * A parsed path object generated by path.parse() or consumed by path.format().
   */
  private get _parsedPath() {
    return parse(this._newPath.toString());
  }
  /**
   * The root of the path such as '/' or 'c:\'
   */
  get root(): string {
    return this._parsedPath.root;
  }
  /**
   * The full directory path such as '/home/user/dir' or 'c:\path\dir'
   */
  get dir(): string {
    return this._parsedPath.dir;
  }
  /**
   * The file name including extension (if any) such as 'index.html'
   */
  get base(): string {
    return this._parsedPath.base;
  }
  /**
   * The file extension (if any) such as '.html'
   */
  get ext(): string {
    return this._parsedPath.ext;
  }
  /**
   * The file name without extension (if any) such as 'index'
   */
  get name(): string {
    return this._parsedPath.name;
  }

  //  isFile(): boolean{
  //   return false
  //  };
  //  isDirectory(): boolean{
  //   return false
  //  };
  //  isBlockDevice(): boolean{
  //   return false
  //  };
  //  isCharacterDevice(): boolean{
  //   return false
  //  };
  //  isSymbolicLink(): boolean{
  //   return false
  //  };
  //  isFIFO(): boolean{
  //   return false
  //  };
  //  isSocket(): boolean{
  //   return false
  //  };
  // get dev(): number{
  //   return 0
  // }
  // get ino(): number{
  //   return 0
  // }
  // get mode(): number{
  //   return 0
  // }
  // get nlink(): number{
  //   return 0
  // }
  // get uid(): number{
  //   return 0
  // }
  // get gid(): number{
  //   return 0
  // }
  // get rdev(): number{
  //   return 0
  // }
  // get size(): number{
  //   return 0
  // }
  // get blksize(): number{
  //   return 0
  // }
  // get blocks(): number{
  //   return 0
  // }
  // get atimeMs(): number{
  //   return 0
  // }
  // get mtimeMs(): number{
  //   return 0
  // }
  // get ctimeMs(): number{
  //   return 0
  // }
  // get birthtimeMs(): number{
  //   return 0
  // }
  // get atime(): Date{
  //   return new Date()
  // }
  // get mtime(): Date{
  //   return new Date()
  // }
  // get ctime(): Date{
  //   return new Date()
  // }
  // get birthtime(): Date{
  //   return new Date()
  // }
}
